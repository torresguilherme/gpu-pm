const uint MAX_MATERIALS = 256;

layout (set = 0, binding = 0) uniform Specs {
    uint samples_per_pixel;
    uint image_width;
    uint image_height;
    uint num_meshes;
    uint num_materials;
} specs;

layout (set = 0, binding = 1) uniform Camera {
    mat4 view_matrix;
    float horizontal_fov;
    float aspect;
} camera;

layout (set = 0, binding = 2) uniform MaterialData {
    vec4 albedo;
    vec4 emissive;
    vec4 metallic_roughness;
} material_data[MAX_MATERIALS];

layout (set = 0, binding = 3) buffer Image {
    vec4 data[];
} image;

struct Vertex {
    vec4 position;
    vec4 normal;
    vec4 tex_coord;
    vec4 tangent;
    vec4 bitangent;
    ivec4 indices;
    mat4 global_transform;
};

layout (set = 0, binding = 4) buffer MeshData {
    uint num_indices;
    uint num_vertices;
    Vertex vertices[];
} mesh_data;
